<?php
if (!defined("B_PROLOG_INCLUDED") || B_PROLOG_INCLUDED !== true) {
	require_once($_SERVER["DOCUMENT_ROOT"] . "/bitrix/modules/main/include/prolog_before.php");
}

use Bitrix\Main\Loader;
use Bitrix\Iblock\IblockTable;
use Bitrix\Iblock\PropertyTable;
use Bitrix\Iblock\ElementTable;

if (!Loader::includeModule('iblock')) {
	die('–ú–æ–¥—É–ª—å iblock –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
}

$iblocksDB = IblockTable::getList([
		'filter' => ['CODE'=>['cars','rents']],
		'select' => ['ID', 'NAME','CODE']]
);
$iblocks = [];

while ($iblock = $iblocksDB->fetch()) {
	$iblocks[$iblock['CODE']] = $iblock;
}

if (!isset($iblocks['cars']) || !isset($iblocks['rents'])) {
	die('–Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å –∏–Ω—Ñ–æ–±–ª–æ–∫ –º–∞—à–∏–Ω—ã –∏–ª–∏ –∞—Ä–µ–Ω–¥—ã –º–∞—à–∏–Ω');
}

echo "üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É...\n";

$carsIblockId = $iblocks['cars']['ID'];
$rentsIblockId = $iblocks['rents']['ID'];

if ($rentsIblockId) {
	$rentElements = ElementTable::getList([
		'filter' => ['IBLOCK_ID' => $rentsIblockId],
		'select' => ['ID']
	])->fetchAll();

	foreach ($rentElements as $elem) {
		\CIBlockElement::Delete($elem['ID']);
	}
	echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ " . count($rentElements) . " —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ 'rents'\n";
}

if ($carsIblockId) {
	// –£–¥–∞–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ cars
	$carElements = ElementTable::getList([
		'filter' => ['IBLOCK_ID' => $carsIblockId],
		'select' => ['ID']
	])->fetchAll();

	foreach ($carElements as $elem) {
		\CIBlockElement::Delete($elem['ID']);
	}
	echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ " . count($carElements) . " —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ 'cars'\n";
}



//–°–æ–∑–¥–∞–Ω–∏–µ 5 –º–∞—à–∏–Ω

$cars = [];
$categories = ['1', '2', '3', '1', '2'];


for ($i = 1; $i <= 5; $i++) {
	$el = new \CIBlockElement();
	$arr = [
		'IBLOCK_ID' => $carsIblockId,
		'NAME' => "–ú–∞—à–∏–Ω–∞ #$i",
		'ACTIVE' => 'Y',
		'PROPERTY_VALUES' => [
			"CATEGORY" => $categories[$i - 1]
		],
		"CODE" => \CUtil::translit("–ú–∞—à–∏–Ω–∞ #$i", "ru", ["replace_space" => "-", "replace_other" => "-"])
	];
	\Bitrix\Main\Diag\Debug::writeToFile(
		$arr,
		date("d.m.Y H:i:s"),
		"local/cars.log"
	);

	$carId = $el->Add($arr);

	if (!$carId) {
		echo "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—à–∏–Ω—ã #$i: " . $el->LAST_ERROR . "\n";
	} else {
		echo "–ú–∞—à–∏–Ω–∞ #$i —Å–æ–∑–¥–∞–Ω–∞ (ID: $carId, –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {$categories[$i - 1]})\n";
		$cars[] = $carId;
	}
}

//–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∞—Ä–µ–Ω–¥

$users = [];
$userEmails = ['spiderman@example.com', 'wolverine@example.com', 'daredevil@example.com', 'venom@example.com', 'WEAREVENOM@example.com'];

foreach ($userEmails as $email) {
	$user = \Bitrix\Main\UserTable::getList(['filter' => ['=EMAIL' => $email], 'select' =>
		['ID']])->fetch();
	if ($user) {
		$users[] = $user['ID'];
	} else {
		$user = new \CUser();
		$userId = $user->Add([
			'EMAIL' => $email,
			'LOGIN' => $email,
			'NAME' => '–ò–º—è',
			'LAST_NAME' => substr($email, 0, strpos($email, '@')),
			'PASSWORD' => '123456',
			'CONFIRM_PASSWORD' => '123456',
			'ACTIVE' => 'Y'
		]);
		if (!$userId) {
			echo "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $email: " . $user->LAST_ERROR . "\n";
			// –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∞–¥–º–∏–Ω–∞ –∫–∞–∫ fallback
			$users[] = 1;
		} else {
			$users[] = $userId;
			echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $email —Å–æ–∑–¥–∞–Ω (ID: $userId)\n";
		}
	}
}

// –°–æ–∑–¥–∞—ë–º –∞—Ä–µ–Ω–¥—ã
$now = new DateTime();
for ($i = 0; $i < 5; $i++) {
	$rentFrom = clone $now;
	$rentFrom->modify("+{$i} days");
	$rentTo = clone $rentFrom;
	$rentTo->modify("+2 days");

	$el = new \CIBlockElement();
	$rentArr = [
		'IBLOCK_ID' => $rentsIblockId,
		'NAME' => "–ê—Ä–µ–Ω–¥–∞ –º–∞—à–∏–Ω—ã #{$cars[$i]}",
		'ACTIVE' => 'Y',
		'PROPERTY_VALUES' => [
			"CAR" => $cars[$i],
			"CLIENT" => $users[$i],
			"RENT_FROM" => $rentFrom->format('d.m.Y H:i:s'),
			"RENT_TO" => $rentTo->format('d.m.Y H:i:s')
		],
		'CODE' => "–ê—Ä–µ–Ω–¥–∞ –º–∞—à–∏–Ω—ã #{$cars[$i]} " . rand(0,99999)
	];
	\Bitrix\Main\Diag\Debug::writeToFile(
		$rentArr,
		date("d.m.Y H:i:s"),
		"local/rent.log"
	);


	$rentId = $el->Add($rentArr);

	if (!$rentId) {
		echo "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä–µ–Ω–¥—ã –¥–ª—è –º–∞—à–∏–Ω—ã {$cars[$i]}: " . $el->LAST_ERROR . "\n";
	} else {
		echo "–ê—Ä–µ–Ω–¥–∞ #$rentId —Å–æ–∑–¥–∞–Ω–∞: –º–∞—à–∏–Ω–∞ {$cars[$i]}, –∫–ª–∏–µ–Ω—Ç {$users[$i]}, —Å " . $rentFrom->format('Y-m-d H:i') . " –ø–æ " . $rentTo->format('Y-m-d H:i') . "\n";
	}
}

echo "\n‚úÖ –ì–æ—Ç–æ–≤–æ! –°–æ–∑–¥–∞–Ω–æ 5 –º–∞—à–∏–Ω –∏ 5 –∞—Ä–µ–Ω–¥.–ù–∞–≤–µ—Ä–Ω–æ\n";